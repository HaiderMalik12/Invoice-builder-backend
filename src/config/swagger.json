{
  "title": "Invoice Builder API Documentation",
  "description": "Swagger API Documentation for Invoice Builder MEAN Stack App",
  "license": {
    "name": "MIT",
    "url": "https://opensource.org/licenses/MIT"
  },
  "version": "1.0.0",
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Invocies",
      "description": "API for Inovice"
    },
    {
      "name": "Clients",
      "description": "API for Client"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/Clients": {
      "post": {
        "tags": ["Clients"],
        "summary": "Create new Client",
        "description": "Create new Client in the System",
        "parameters": [
          {
            "name": "client",
            "description": "client that we want to create",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/Client"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "new client is created",
            "schema": {
              "$ref": "#definitions/Client"
            }
          }
        }
      },
      "get": {
        "tags": ["Clients"],
        "summary": "FInd all Clients from the server",
        "description": "All clients",
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#definitions/Clients"
            }
          }
        }
      }
    },
    "/Clients/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Id of the Client",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Clients"],
        "description": "Find the Client by id",
        "summary": "Find single Client",
        "responses": {
          "200": {
            "description": "Client has found",
            "schema": {
              "$ref": "#definitions/Client"
            }
          }
        }
      },
      "delete": {
        "tags": ["Clients"],
        "description": "Delete the Client by id",
        "summary": "Delete single Client",
        "responses": {
          "200": {
            "description": "Client has deleted",
            "schema": {
              "$ref": "#definitions/Client"
            }
          }
        }
      },
      "put": {
        "tags": ["Clients"],
        "summary": "Update an Client",
        "description": "Update Client in the System",
        "parameters": [
          {
            "name": "client",
            "description": "Client that we want to udpate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/UpdateClient"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Client is updated",
            "schema": {
              "$ref": "#definitions/Client"
            }
          }
        }
      }
    },
    "/Invoices": {
      "post": {
        "tags": ["Invocies"],
        "summary": "Create new Invoice",
        "description": "Create new Invoice in the System",
        "parameters": [
          {
            "name": "invoice",
            "description": "Invoice that we want to create invoice",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "new Invoice is created",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      },
      "get": {
        "tags": ["Invocies"],
        "summary": "FInd all Invoices from the server",
        "description": "All invoices",
        "parameters": [
          {
            "name": "page",
            "type": "integer",
            "description": "Set the page for pagination",
            "in": "query"
          },
          {
            "name": "perPage",
            "type": "integer",
            "description": "Define the limit for the records",
            "in": "query"
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Filter the invoices by item name",
            "in": "query"
          },
          {
            "name": "sortField",
            "type": "string",
            "description": "Define the sortField for sorting i.e item,date,due",
            "in": "query"
          },
          {
            "name": "sortDir",
            "type": "string",
            "description": "Define the sortDir ie. desc, asc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#definitions/Invoices"
            }
          }
        }
      }
    },
    "/Invoices/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Id of the Invoice",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Invocies"],
        "description": "Find the Invocie by id",
        "summary": "Find single Invoice",
        "responses": {
          "200": {
            "description": "Invoice has found",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      },
      "delete": {
        "tags": ["Invocies"],
        "description": "Delete the Invocie by id",
        "summary": "Delete single Invoice",
        "responses": {
          "200": {
            "description": "Invoice has deleted",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      },
      "put": {
        "tags": ["Invocies"],
        "summary": "Update an Invoice",
        "description": "Update Invoice in the System",
        "parameters": [
          {
            "name": "invoice",
            "description": "Invoice that we want to udpate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/UpdateInvoice"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Invoice is updated",
            "schema": {
              "$ref": "#definitions/Invoice"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Client": {
      "required": ["firstName", "lastName", "email"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "UpdateClient": {
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Clients": {
      "type": "array",
      "items": {
        "$ref": "#definitions/Client"
      }
    },
    "Invoice": {
      "required": ["item", "qty", "date", "due", "client"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "item": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "due": {
          "type": "string",
          "format": "date"
        },
        "rate": {
          "type": "number",
          "format": "float"
        },
        "tax": {
          "type": "number",
          "format": "float"
        },
        "client": {
          "type": "string"
        }
      }
    },
    "UpdateInvoice": {
      "properties": {
        "item": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "due": {
          "type": "string",
          "format": "date"
        },
        "rate": {
          "type": "number",
          "format": "float"
        },
        "tax": {
          "type": "number",
          "format": "float"
        },
        "client": {
          "type": "string"
        }
      }
    },
    "Invoices": {
      "properties": {
        "docs": {
          "type": "array",
          "$ref": "#definitions/Invoice"
        },
        "total": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "pages": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        }
      }
    }
  }
}
